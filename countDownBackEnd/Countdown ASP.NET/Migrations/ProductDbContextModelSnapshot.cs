// <auto-generated />
using System;
using Countdown_ASP.NET.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Countdown_ASP.NET.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Countdown_ASP.NET.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ImgLink")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ProductApiRequestUrlId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductMultiVendorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSingleVendorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ProductApiRequestUrlId");

                    b.HasIndex("ProductMultiVendorId");

                    b.HasIndex("ProductSingleVendorId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductApiRequestUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApiSiteNameId")
                        .HasColumnType("int");

                    b.Property<string>("RequestUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ApiSiteNameId");

                    b.ToTable("ApiRequests");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductApiSiteName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ApiNames");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductMultiVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("MultiVendors");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductSingleVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ProductMultiVendorId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductMultiVendorId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("SingleVendors");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserRoleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.Product", b =>
                {
                    b.HasOne("Countdown_ASP.NET.Models.ProductApiRequestUrl", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductApiRequestUrlId");

                    b.HasOne("Countdown_ASP.NET.Models.ProductMultiVendor", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductMultiVendorId");

                    b.HasOne("Countdown_ASP.NET.Models.ProductSingleVendor", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductSingleVendorId");

                    b.HasOne("Countdown_ASP.NET.Models.ProductType", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId");
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductApiRequestUrl", b =>
                {
                    b.HasOne("Countdown_ASP.NET.Models.ProductApiSiteName", "ApiSiteName")
                        .WithMany("RequestUrls")
                        .HasForeignKey("ApiSiteNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductMultiVendor", b =>
                {
                    b.HasOne("Countdown_ASP.NET.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Countdown_ASP.NET.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Countdown_ASP.NET.Models.ProductSingleVendor", b =>
                {
                    b.HasOne("Countdown_ASP.NET.Models.ProductMultiVendor", null)
                        .WithMany("Vendors")
                        .HasForeignKey("ProductMultiVendorId");

                    b.HasOne("Countdown_ASP.NET.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Countdown_ASP.NET.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
